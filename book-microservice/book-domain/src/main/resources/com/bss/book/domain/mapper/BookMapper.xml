<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bss.book.domain.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.bss.book.domain.model.Book">
    <id column="isbn" jdbcType="BIGINT" property="isbn" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="pages" jdbcType="INTEGER" property="pages" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="press" jdbcType="VARCHAR" property="press" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="publish_status" jdbcType="INTEGER" property="publishStatus" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="sale" jdbcType="INTEGER" property="sale" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="verify_status" jdbcType="INTEGER" property="verifyStatus" />
    <result column="author_id" jdbcType="VARCHAR" property="authorId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="album_pic" jdbcType="VARCHAR" property="albumPic"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    isbn, author_name, book_name, description, pages, pic, press, price, publish_status, 
    publish_time, sale, stock, verify_status, author_id, category_id,album_pic
  </sql>
  <select id="selectByExample" parameterType="com.bss.book.domain.model.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where isbn = #{isbn,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book
    where isbn = #{isbn,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bss.book.domain.model.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bss.book.domain.model.Book">
    insert into book (isbn, author_name, book_name, 
      description, pages, pic, 
      press, price, publish_status, 
      publish_time, sale, stock, 
      verify_status, author_id, category_id,album_pic
      )
    values (#{isbn,jdbcType=BIGINT}, #{authorName,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{pages,jdbcType=INTEGER}, #{pic,jdbcType=VARCHAR}, 
      #{press,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{publishStatus,jdbcType=INTEGER},
      #{publishTime,jdbcType=TIMESTAMP}, #{sale,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, 
      #{verifyStatus,jdbcType=INTEGER}, #{authorId,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}
      #{albumPic, jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bss.book.domain.model.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        isbn,
      </if>
      <if test="authorName != null">
        author_name,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="pages != null">
        pages,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="press != null">
        press,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="publishStatus != null">
        publish_status,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="sale != null">
        sale,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="verifyStatus != null">
        verify_status,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="albumPic != null">
        album_pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        #{isbn,jdbcType=BIGINT},
      </if>
      <if test="authorName != null">
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="pages != null">
        #{pages,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="publishStatus != null">
        #{publishStatus,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sale != null">
        #{sale,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="verifyStatus != null">
        #{verifyStatus,jdbcType=INTEGER},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="albumPic != null">
        #{albumPic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bss.book.domain.model.BookExample" resultType="java.lang.Integer">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.isbn != null">
        isbn = #{record.isbn,jdbcType=BIGINT},
      </if>
      <if test="record.authorName != null">
        author_name = #{record.authorName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.pages != null">
        pages = #{record.pages,jdbcType=INTEGER},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.press != null">
        press = #{record.press,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.publishStatus != null">
        publish_status = #{record.publishStatus,jdbcType=INTEGER},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sale != null">
        sale = #{record.sale,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.verifyStatus != null">
        verify_status = #{record.verifyStatus,jdbcType=INTEGER},
      </if>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.albumPic != null">
        album_pic = #{record.albumPic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set isbn = #{record.isbn,jdbcType=BIGINT},
      author_name = #{record.authorName,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      pages = #{record.pages,jdbcType=INTEGER},
      pic = #{record.pic,jdbcType=VARCHAR},
      press = #{record.press,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      publish_status = #{record.publishStatus,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      sale = #{record.sale,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      verify_status = #{record.verifyStatus,jdbcType=INTEGER},
      author_id = #{record.authorId,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      album_pic = #{record.albumPic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bss.book.domain.model.Book">
    update book
    <set>
      <if test="authorName != null">
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="pages != null">
        pages = #{pages,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="publishStatus != null">
        publish_status = #{publishStatus,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sale != null">
        sale = #{sale,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="verifyStatus != null">
        verify_status = #{verifyStatus,jdbcType=INTEGER},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="albumPic != null">
        album_pic = #{albumPic,jdbcType=VARCHAR},
      </if>
    </set>
    where isbn = #{isbn,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bss.book.domain.model.Book">
    update book
    set author_name = #{authorName,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      pages = #{pages,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      publish_status = #{publishStatus,jdbcType=INTEGER},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      sale = #{sale,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      verify_status = #{verifyStatus,jdbcType=INTEGER},
      author_id = #{authorId,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER}
      album_pic = #{albumPic, jdbcType=VARCHAR}
    where isbn = #{isbn,jdbcType=BIGINT}
  </update>
</mapper>